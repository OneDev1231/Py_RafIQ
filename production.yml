version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  static_volume: {}
  media_volume: {}

services:
  nginx:
    build: 
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - 80:80
      - 443:443
    restart: always
    depends_on:
      - django
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: rafiq_production_django
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.env
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: rafiq_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.env

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: rafiq_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django

    image: rafiq_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: rafiq_production_flower
    command: /start-flower
    ports:
      - 5555:5555
